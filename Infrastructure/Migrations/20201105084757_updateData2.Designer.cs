// <auto-generated />
using System;
using Infrastructure.EntityFrameWorkCore.SQLServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(WkBillContext))]
    [Migration("20201105084757_updateData2")]
    partial class updateData2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.WK_Model.BillType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IconId")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("BillTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("44de7e05-da1f-d17e-7ae7-7999c7f3e004"),
                            IconId = "restaurant",
                            Name = "餐饮",
                            UserId = new Guid("dfc004e1-24a2-ef56-4d1a-463a4040900f")
                        },
                        new
                        {
                            Id = new Guid("e96a2e05-1f4e-ee8d-bc16-e64732910bc2"),
                            IconId = "daily-expenses",
                            Name = "日用",
                            UserId = new Guid("dfc004e1-24a2-ef56-4d1a-463a4040900f")
                        },
                        new
                        {
                            Id = new Guid("c3621be8-a9da-9f9d-81ee-c0b6889a3692"),
                            IconId = "traffic",
                            Name = "交通",
                            UserId = new Guid("dfc004e1-24a2-ef56-4d1a-463a4040900f")
                        },
                        new
                        {
                            Id = new Guid("eca480e0-98b4-c01f-4684-12449d0ea658"),
                            IconId = "wages",
                            Name = "工资",
                            UserId = new Guid("dfc004e1-24a2-ef56-4d1a-463a4040900f")
                        },
                        new
                        {
                            Id = new Guid("825559b5-fd27-4c66-a0e4-34033f7698b6"),
                            IconId = "conduct",
                            Name = "理财",
                            UserId = new Guid("dfc004e1-24a2-ef56-4d1a-463a4040900f")
                        });
                });

            modelBuilder.Entity("Domain.WK_Model.Disburse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BillTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BillType")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Day")
                        .HasColumnType("int");

                    b.Property<decimal>("Money")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Disburses");
                });

            modelBuilder.Entity("Domain.WK_Model.Revenue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BillTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BillTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<decimal>("Money")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillTypeId");

                    b.ToTable("Revenues");
                });

            modelBuilder.Entity("Domain.WK_Model.Revenue", b =>
                {
                    b.HasOne("Domain.WK_Model.BillType", "BillType")
                        .WithMany()
                        .HasForeignKey("BillTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
